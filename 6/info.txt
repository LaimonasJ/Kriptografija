#http://www.mif.vu.lt/katedros/matinf/asm/vs/pask/crypto_prot/crppr.htm

#6 uzduotis

#Padaryti frequency, pairs, autocorrelation
#Pirma randam T reiksmes, tada lyginam su pasiskirstymo funkcijom
#Uzsifruotas tekstas turetu tureti mazesnes p reiksmes.

#pavertimas i bitus
def arrayToBits(array):
    getBin = lambda x, n: x >= 0 and str(bin(x))[2:].zfill(n) or "-" + str(bin(x))[3:].zfill(n)
    st = ""
    for i in array:
        st = st + getBin(i, 8)
    return st

# Chi-kvadrat su m laisvės laipsnių p- reikšmė  t-reiksme su kuria lyginama
def getChiSquared(m, t):
    T = RealDistribution('chisquared', m)
    p=1-T.cum_distribution_function(t)
    return p

#Gaunam T. Kiek 0 ir 1 testas
def frequencyTest(bitString):
    n0 = 0
    n1 = 0
    for i in bitString:
        if i == '0':
            n0 += 1
        else:
            n1 += 1
    #print (n0, n1, len(bitString))
    T = ((n0 - n1) ^ 2)/len(bitString)
    return T


    
sifras1 = [152, 58, 221, 87, 65, 24, 198, 254, 251, 68, 224, 176, 139, 192, 167, 55, 120, 245, 5, 35, 128, 136, 107, 30, 106, 73, 170, 121, 164, 214, 23, 154, 40, 216, 70, 92, 14, 214, 225, 225, 88, 225, 162, 156, 205, 176, 59, 118, 240, 11, 37, 150, 136, 111, 25, 100, 80, 177, 111, 169, 201, 25, 148, 50, 209, 84, 65, 24, 206, 225, 225, 86, 230, 166, 138, 198, 191, 34, 116, 240, 21, 60, 135, 157, 96, 4]
sifras2 = [149, 152, 24, 171, 184, 180, 119, 172, 220, 76, 56, 189, 87, 117, 189, 130, 117, 33, 250, 235, 242, 28, 121, 10, 5, 58, 218, 158, 1, 167, 17, 85, 98, 58, 75, 194, 155, 18, 250, 220, 115, 105, 148, 230, 154, 160, 87, 130, 94, 43, 252, 127, 212, 46, 170, 182, 232, 50, 8, 12, 184, 31, 91, 120, 51, 89, 223, 141, 10, 250, 220, 125, 110, 144, 240, 145, 175, 78, 128, 94, 53, 229, 110, 193, 33, 183]
sifras3 = [152, 58, 221, 87, 65, 24, 198, 254, 251, 68, 224, 176, 139, 192, 167, 55, 120, 245, 5, 35, 128, 136, 107, 30, 106, 73, 170, 121, 164, 214, 23, 154, 40, 216, 70, 92, 14, 214, 225, 225, 88, 225, 162, 156, 205, 176, 59, 118, 240, 11, 37, 150, 136, 111, 25, 100, 80, 177, 111, 169, 201, 25, 148, 50, 209, 84, 65, 24, 206, 225, 225, 86, 230, 166, 138, 198, 191, 34, 116, 240, 21, 60, 135, 157, 96, 4]

s = [1, 1, 1]
b = arrayToBits(s)
f = frequencyTest(b)
p = getChiSquared(1, f)

print (b, f, p)

bits1 = arrayToBits(sifras1)
bits2 = arrayToBits(sifras2)
bits3 = arrayToBits(sifras3)


f1 = frequencyTest(bits1)
p1 = getChiSquared(1, f1)

print (f1, p1)